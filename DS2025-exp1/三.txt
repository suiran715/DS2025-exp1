#include <iostream>
#include <vector>
#include <stack>
#include <random>
#include <ctime>

using namespace std;

int largestRectangleArea(vector<int>& heights) {
    stack<int> st;
    heights.insert(heights.begin(), 0);
    heights.push_back(0);
    int maxArea = 0;
    for (int i = 0; i < heights.size(); ++i) {
        while (!st.empty() && heights[i] < heights[st.top()]) {
            int h = heights[st.top()];
            st.pop();
            int w = i - st.top() - 1;
            maxArea = max(maxArea, h * w);
        }
        st.push(i);
    }
    return maxArea;
}

vector<vector<int>> generateTestCases() {
    vector<vector<int>> testCases;
    srand(time(0));
    for (int i = 0; i < 10; ++i) {
        int n = rand() % 105 + 1;
        vector<int> heights;
        for (int j = 0; j < n; ++j) {
            heights.push_back(rand() % 105);
        }
        testCases.push_back(heights);
    }
    return testCases;
}

int main() {
    vector<int> example1 = {2, 1, 5, 6, 2, 3};
    cout << "示例1输出: " << largestRectangleArea(example1) << endl;

    vector<int> example2 = {2, 4};
    cout << "示例2输出: " << largestRectangleArea(example2) << endl;
    vector<vector<int>> testCases = generateTestCases();
    for (int i = 0; i < testCases.size(); ++i) {
        cout << "测试用例" << i + 1 << " 最大面积: " << largestRectangleArea(testCases[i]) << endl;
    }

    return 0;
}